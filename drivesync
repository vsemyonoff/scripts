#!/usr/bin/env bash

set -e

THIS="$(basename ${BASH_SOURCE[0]})"

function echoerr() { cat <<< "$@" 1>&2; }

function usage() {
    echoerr "usage: ${THIS} profile [extra rclone options]"
    exit 1
}

# First arg: profile name to sync, the rest will pass to 'rclone'
[[ ${#} < 1 ]] && usage
case "${1}" in
    -*)
        usage
        ;;
    *)
        PROFILE="${1}"
        shift
        ;;
esac

CFG_FILE="${XDG_CONFIG_HOME}/drivesync/${PROFILE}.conf"
LOG_FILE="${XDG_LOG_HOME}/drivesync/${PROFILE}.log"

# Validate profile existence
if [[ ! -r "${CFG_FILE}" ]]; then
    echoerr "[${THIS}]: invalid profile '${PROFILE}'"
    usage
fi

LOCAL_PATH_VAR="${PROFILE^^}_HOME"
LOCAL_PATH="${!LOCAL_PATH_VAR}"; unset LOCAL_PATH_VAR
REMOTE_PATH_VAR="${PROFILE^^}_PATH"
REMOTE_PATH="drive:${!REMOTE_PATH_VAR}"; unset REMOTE_PATH_VAR
CHECK_FILE=".gitkeep"

mkdir -p "${LOCAL_PATH}" "$(dirname ${LOG_FILE})"
if [[ ! -f "${LOCAL_PATH}/${CHECK_FILE}" ]]; then
    # Create check-file, copy to remote & resync
    touch "${LOCAL_PATH}/${CHECK_FILE}"
    rclone copyto "${LOCAL_PATH}/${CHECK_FILE}" \
                  "${REMOTE_PATH}/${CHECK_FILE}"
    ARGS="--resync"
else
    ARGS="--check-access"
fi

# Sync
exec rclone bisync --config="${CFG_FILE}"            \
                   "${LOCAL_PATH}"                   \
                   "${REMOTE_PATH}"                  \
                   --compare="size,modtime,checksum" \
                   --check-filename="${CHECK_FILE}"  \
                   --log-file="${LOG_FILE}"          \
                   --create-empty-src-dirs           \
                   --slow-hash-sync-only             \
                   --log-level NOTICE                \
                   --resilient                       \
                   --metadata                        \
                   --fix-case                        \
                   ${ARGS} "${@}"
