#!/usr/bin/env bash
set -e

###
#
# Use env vars to customize behavior:
# ------------------------------------------------------
# | - NAME - |    Description           | - Default -  |
# -----------------------------------------------------
#   SUPERUSER: superuser name           [     USER     ]
#   SUPERPASS: superuser password       [ autogenerate ]
#      DBUSER: regular user name        [   HOSTNAME   ]
#      DBPASS: regular user password    [ autogenerate ]
#      PGUSER: system PostgreSQL user   [  'postgres'  ]
#  PGPASSWORD: system user new password [ autogenerate ]
#  PGPASSFILE: passwords storage file   [ HOME/.pgpass ]
#      PGDATA: database storage         [  autodetect  ]
# ------------------------------------------------------
#
# Script requires 'root' privileges so caller must be
# sudoer user.
#
# If script was started interactively and SUPERPASS not
# set then it will be prompted to enter new password.
# Script will set LANG locale for superuser and regular
# user databases and 'C.UTF-8' as default locale.
#
# Will store autogenerated passwords in PGPASSFILE.
#
###

THIS="$(basename ${BASH_SOURCE[0]})"

[[ "${EUID}" != 0 ]] && {
    VARSLIST="LANG,SUPERUSER,SUPERPASS,DBUSER,DBPASS,PGUSER,PGPASSWORD,PGDATA,PGPASSFILE"
    exec sudo --preserve-env="${VARSLIST}" "${BASH_SOURCE[0]}" "${1}"
}

REALLANG="${LANG}"
LANG="C"

REALHOME="${SUDO_HOME:-${HOME}}"
REALUSER="${SUDO_USER:-${USER}}"
REAL_UID="${SUDO_UID:-${UID}}"
REAL_GID="${SUDO_GID:-${GID}}"
SERVICE="postgresql.service" # ${1:+@${1}}.service"

SUPERUSER="${SUPERUSER:-${REALUSER}}"
DBUSER="${DBUSER:-${HOSTNAME}}"
DBPASS="${DBPASS:-$(uuidgen)}" # use random if not specified
PGUSER="postgres" # "${PGUSER:-postgres}"
export PGPASSWORD="${PGPASSWORD:-$(uuidgen)}" # use random if not specified
PGPASSFILE="${PGPASSFILE:-${REALHOME}/.pgpass}"

# Detect postgres data path
[[ "${PGDATA}" ]] || {
    PGHOME="$(cat /etc/passwd | grep ${PGUSER} | awk -F':' '{ print $6 }')"
    [[ "${PGHOME}" ]] || {
        echo "[${THIS}] error: can't detect '${PGUSER}' user's home" >&2
        exit 1
    }
    #eval $(cat "/etc/os-release" | grep "^ID=")
    #case "${ID}" in
    #    arch)
    #        PGHOME="postgres"
    #        ;;
    #    *)
    #        PGHOME="pgsql"
    #        ;;
    #esac
    PGDATA="${PGHOME}/data" # ${1:-data}"
    unset ID PGHOME
}
echo "Postgres data path: '${PGDATA}'"

# (Re)create database
pgrep -xf ".*postgres -D ${PGDATA}" && systemctl --system stop "${SERVICE}"
INITPASS="$(mktemp --tmpdir=/tmp)"
echo "${PGPASSWORD}" > "${INITPASS}"
chown "${PGUSER}" "${INITPASS}"
sudo -u "${PGUSER}" bash -c "
    rm -fr "${PGDATA}";                   \
    initdb                                \
      --pgdata="${PGDATA}"                \
      --auth-host=scram-sha-256           \
      --auth-local=scram-sha-256          \
      --encoding=UTF8                     \
      --locale=C.UTF-8                    \
      --pwfile="${INITPASS}"              \
      --set="listen_addresses='*'";       \
"
rm -f "${INITPASS}"; unset INITPASS
systemctl --system start "${SERVICE}"

# Create superuser role or prepare SQL query for later use
CREATE_TPL="CREATE ROLE \"%s\" WITH SUPERUSER LOGIN PASSWORD '%s';"
[[ ! "${SUPERPASS}" && -t 0 ]] && {
    # prompt for new password if 'stdin' is available
    createuser                \
      --username="${PGUSER}"  \
      --superuser             \
      --pwprompt              \
      "${SUPERUSER}"
} || {
    SUPERPASS="${SUPERPASS:-$(uuidgen)}" # use random if not specified
    CREATE_SUPERUSER_SQL=$(printf "${CREATE_TPL}" "${SUPERUSER}" "${SUPERPASS}")
}
unset CREATE_TPL

psql --username="${PGUSER}" << SQL >/dev/null
    -- Create superuser and database
    ${CREATE_SUPERUSER_SQL}
    CREATE DATABASE "${SUPERUSER}"
      WITH
        TEMPLATE = 'template0'
        LOCALE = '${REALLANG}'
        OWNER = '${SUPERUSER}';
    -- Create regular user and database
    CREATE ROLE "${DBUSER}" WITH LOGIN PASSWORD '${DBPASS}';
    CREATE DATABASE "${DBUSER}"
      WITH
        TEMPLATE = 'template0'
        LOCALE = '${REALLANG}'
        OWNER = '${DBUSER}';
    --
SQL

# Store passwords to file
echo "Generating password file: '${PGPASSFILE}'"
sudo -u "${REALUSER}" mkdir --mode=700 --parents "$(dirname ${PGPASSFILE})"
cat << EOF > "${PGPASSFILE}"
localhost:5432:${PGUSER}:${PGUSER}:${PGPASSWORD}
localhost:5432:${DBUSER}:${DBUSER}:${DBPASS}
localhost:5432:*:${SUPERUSER}:${SUPERPASS:-FIXME}
EOF
chown "${REAL_UID}:${REAL_GID}" "${PGPASSFILE}"
chmod 600 "${PGPASSFILE}"
