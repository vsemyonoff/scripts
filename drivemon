#!/usr/bin/env bash

set -e

THIS="$(basename ${BASH_SOURCE[0]})"

function echoerr() { cat <<< "$@" 1>&2; }

function usage() {
    echoerr "usage: ${THIS} profile"
    exit 1
}

# Expect one argument: profile name to monitor
[[ ${#} != 1 ]] && usage
PROFILE="${1}"

PARENT="$(ps -o comm= ${PPID})"
if [[ "${PARENT}" != "systemd" ]]; then
    echoerr "[${THIS}]: supposed to be called from systemd service, exiting..."
    exit 1
fi

TARGET_VAR="${PROFILE^^}_HOME"
TARGET="${!TARGET_VAR}"
EVENTS="attrib,create,delete,modify,move"
SOCK="${XDG_RUNTIME_DIR}/drivesync/${PROFILE}.fifo"

# Socket must be created by corresponding systemd unit
if [[ ! -p "${SOCK}" ]]; then
    echoerr "[${THIS}]: '${SOCK}' output socket does not exists, exiting..."
    exit 1
fi

exec inotifywait --outfile "${SOCK}" \
                 --event "${EVENTS}" \
                 --no-dereference    \
                 --recursive         \
                 --monitor           \
                 "${TARGET}"
